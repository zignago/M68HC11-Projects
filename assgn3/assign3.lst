0001                         **************************************
0002                         *
0003                         * Name: Gian Zignago
0004                         * ID: 12567832
0005                         * Date: 10/8/2021
0006                         * Lab3
0007                         *
0008                         * Program description:
0009                         *
0010                         *   calculate the factorial of a 1-byte integer N using 
0011                         *   the multiplication algorithm implemented in Lab2.
0012                         *
0013                         * Pseudocode:
0014                         *
0015                         *   unsigned int N = 8;
0016                         *   int NFAC;
0017                         *   int count;
0018                         *
0019                         *   count = 1;
0020                         *   NFAC = 1;
0021                         *
0022                         *   while(count <= N) {
0023                         *       NFAC = NFAC * count;
0024                         *       count++;
0025                         *   }
0026                         *
0027                         **************************************
0028                         
0029                         * start of data section
0030                         
0031 b000                    	ORG $B000
0032 b000 08                 N	FCB	8		the number to take the factorial of
0033                         
0034                         
0035 b010                    	ORG $B010
0036 b010                    NFAC	RMB	2		Holds end factorial result at program termination (NFAC = N!)
0037 b012                    COUNT RMB	1		Counter for factorial loop
0038 b013                    ML_COUNT	RMB	1	Counter for multiplication loop
0039 b014                    ML_RESULT	RMB	2	Carries result in multiplication loop
0040                         
0041                         * start of program section
0042                         
0043 c000                    	ORG $C000
0044 c000 7f b0 12           	CLR	COUNT		set counter to $00
0045 c003 7c b0 12           	INC	COUNT		set counter to $01 to prevent multiplication by 0 in factorial loop
0046 c006 7f b0 10           	CLR	NFAC		set first byte of NFAC to $00
0047 c009 7f b0 11           	CLR	NFAC+1	set second byte of NFAC to $00
0048 c00c 7c b0 11           	INC	NFAC+1	set second byte of NFAC to $01 (If first byte were to be incremented instead, factorial equation would start at $0100 instead of $0001, leading to incorrect result)
0049                         
0050 c00f b6 b0 12           WHILE	LDAA	COUNT		-- FACTORIAL (outer) LOOP -- 
0051 c012 b1 b0 00           	CMPA	N		compare current value of COUNT with N
0052 c015 22 30              	BHI	ENDWHLE	if count > N, break loop, ending factorial equation
0053 c017 7f b0 13           	CLR	ML_COUNT		set ML_COUNT to $00
0054 c01a 7f b0 14           	CLR	ML_RESULT		set first byte of ML_RESULT to $00
0055 c01d 7f b0 15           	CLR	ML_RESULT+1		set second byte og ML_RESULT to $00
0056                         
0057 c020 b6 b0 13           ML_WHILE	LDAA	ML_COUNT	-- MULTIPLICATION (inner) LOOP --
0058 c023 b1 b0 12           	CMPA	COUNT			compare current value of multiplication counter to factorial counter
0059 c026 24 0e              	BHS	ML_ENDWHLE		if ML_COUNT >= Count, end multiplication
0060 c028 fc b0 14           	LDD	ML_RESULT		load value of ML_RESULT into D register 
0061 c02b f3 b0 10           	ADDD	NFAC			add value of NFAC to D (value of NFAC not changed during ML loop)
0062 c02e fd b0 14           	STD	ML_RESULT		store the value in D register in ML_RESULT variable
0063 c031 7c b0 13           	INC	ML_COUNT		increment multiplication loop counter by 1
0064 c034 20 ea              	BRA	ML_WHILE		return program execution to ML loop condition
0065                         ML_ENDWHLE
0066                         
0067 c036 7f b0 10           	CLR	NFAC			set NFAC to $0000
0068 c039 7f b0 11           	CLR	NFAC+1
0069 c03c fc b0 14           	LDD	ML_RESULT		load resulting value of above multiplication loop in D register 
0070 c03f fd b0 10           	STD	NFAC			set NFAC equal to the value in D register
0071 c042 7c b0 12           	INC	COUNT			increment factorial loop counter by 1
0072 c045 20 c8              	BRA	WHILE			return to factorial loop condition case
0073 c047 cf                 ENDWHLE	STOP			terminate program at end of factorial loop
0074                         

COUNT      b012
ENDWHLE    c047
ML_COUNT   b013
ML_ENDWHLE c036
ML_RESULT  b014
ML_WHILE   c020
N          b000
NFAC       b010
WHILE      c00f
